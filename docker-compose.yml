version: "3"
services:
  api:
    image: node:20
    working_dir: /usr/src/applause
    user: node
    command: yarn dev
    volumes:
      - ./api:/usr/src/applause:z
    depends_on:
      db:
        condition: service_healthy
        restart: true
  web:
    image: node:20
    working_dir: /usr/src/applause
    volumes:
      - ./web:/usr/src/applause:z
    command: yarn dev
    user: node
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_started
  db:
    image: mongo:8.0-rc
    restart: always
    volumes:
      - database:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root_pass
  auth:
    image: quay.io/keycloak/keycloak:25.0
    restart: always
    command: start-dev
    depends_on:
      auth-db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/auth
      KC_DB_USERNAME: auth
      KC_DB_PASSWORD: auth-pass
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
  auth-db:
    image: postgres:16
    restart: always
    volumes:
      - auth-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: auth-pass
      POSTGRES_USER: auth
      POSTGRES_DB: auth
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth"]
      interval: 10s
      timeout: 3s
      retries: 3
volumes:
  database:
  auth-db: