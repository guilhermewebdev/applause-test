version: "3"
services:
  api:
    image: node:20-slim
    platform: linux/amd64
    working_dir: /usr/src/applause
    user: node
    command: yarn dev
    volumes:
      - ./api:/usr/src/applause:z
    depends_on:
      db:
        condition: service_healthy
        restart: true
  web:
    image: node:20-slim
    platform: linux/amd64
    working_dir: /usr/src/applause
    volumes:
      - ./web:/usr/src/applause:z
    command: yarn dev
    user: node
    depends_on:
      - db
  db:
    image: mongo:4.4
    platform: linux/amd64
    restart: always
    volumes:
      - database:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root_pass
  auth:
    image: quay.io/keycloak/keycloak:25.0
    platform: linux/amd64
    restart: always
    command: start-dev
    depends_on:
      auth-db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/auth
      KC_DB_USERNAME: auth
      KC_DB_PASSWORD: auth-pass
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
  auth-db:
    image: postgres:16
    platform: linux/amd64
    restart: always
    volumes:
      - auth-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: auth-pass
      POSTGRES_USER: auth
      POSTGRES_DB: auth
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth"]
      interval: 10s
      timeout: 3s
      retries: 3
  server:
    image: nginx:1.26-alpine
    platform: linux/amd64
    restart: always
    volumes:
      - ./server/conf.d/dev:/etc/nginx/conf.d:ro
      - ./web/.next/static:/var/www/web-static:ro
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - auth
      - web
      - api
    ports:
      - 8080
volumes:
  database:
  auth-db: